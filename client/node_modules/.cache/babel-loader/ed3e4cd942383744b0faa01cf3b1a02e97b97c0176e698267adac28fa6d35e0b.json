{"ast":null,"code":"import { Platform } from 'react-native';\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\nexport function enableExperimentalWebImplementation() {\n  let _shouldEnable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n} // NO-OP since the new implementation is now the default\n\nexport function enableLegacyWebImplementation() {\n  let shouldUseLegacyImplementation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (Platform.OS !== 'web' || useNewWebImplementation === !shouldUseLegacyImplementation) {\n    return;\n  }\n  if (getWasCalled) {\n    console.error('Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.');\n    return;\n  }\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\nexport function isNewWebImplementationEnabled() {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}","map":{"version":3,"names":["Platform","useNewWebImplementation","getWasCalled","enableExperimentalWebImplementation","_shouldEnable","arguments","length","undefined","enableLegacyWebImplementation","shouldUseLegacyImplementation","OS","console","error","isNewWebImplementationEnabled"],"sources":["/Users/aradhye/Documents/Coding/hackathon/client/node_modules/react-native-gesture-handler/lib/module/EnableNewWebImplementation.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\n\nexport function enableExperimentalWebImplementation(\n  _shouldEnable = true\n): void {\n  // NO-OP since the new implementation is now the default\n}\n\nexport function enableLegacyWebImplementation(\n  shouldUseLegacyImplementation = true\n): void {\n  if (\n    Platform.OS !== 'web' ||\n    useNewWebImplementation === !shouldUseLegacyImplementation\n  ) {\n    return;\n  }\n\n  if (getWasCalled) {\n    console.error(\n      'Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.'\n    );\n    return;\n  }\n\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\n\nexport function isNewWebImplementationEnabled(): boolean {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AAEA,IAAIC,uBAAuB,GAAG,IAA9B;AACA,IAAIC,YAAY,GAAG,KAAnB;AAEA,OAAO,SAASC,mCAATA,CAAA,EAEC;EAAA,IADNC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IADX;AAIN,EADC;;AAGF,OAAO,SAASG,6BAATA,CAAA,EAEC;EAAA,IADNC,6BAA6B,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAD3B;EAGL,IACEL,QAAQ,CAACU,EAAT,KAAgB,KAAhB,IACAT,uBAAuB,KAAK,CAACQ,6BAF/B,EAGE;IACA;EACD;EAED,IAAIP,YAAJ,EAAkB;IAChBS,OAAO,CAACC,KAAR,CACE,mLADF;IAGA;EACD;EAEDX,uBAAuB,GAAG,CAACQ,6BAA3B;AACD;AAED,OAAO,SAASI,6BAATA,CAAA,EAAkD;EACvDX,YAAY,GAAG,IAAf;EACA,OAAOD,uBAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}